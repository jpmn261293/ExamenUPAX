CREATE OR REPLACE PACKAGE SCHEMPLOYEES.PAEMPLOYEES IS
	TYPE  tipoCursor     IS REF CURSOR;
	csg_Pragma20991 CONSTANT NUMBER := -20991;
	csg_True VARCHAR2(4 CHAR) := 'TRUE';
	csg_False VARCHAR2(5 CHAR) := 'FALSE';
	csg_Exito VARCHAR2(5 CHAR) := 'EXITO';
	csg_Cero NUMBER := 0;
	csg_Uno NUMBER := 1;
	PROCEDURE SPADDEMPLOYEE(
	GENDERID IN NUMBER,
	JOBID IN NUMBER,
	NAME IN VARCHAR2,
	LASTNAME IN VARCHAR2,
	BIRTHDATE IN VARCHAR2,
	EMPLOYEEID OUT NUMBER,
	RPS OUT VARCHAR2,
	MSG OUT VARCHAR2);

	PROCEDURE SPFINDEMPBYJOB(
	JOBID IN NUMBER,
	CURDATOS OUT SYS_REFCURSOR);

	PROCEDURE SPHRSXEMP(
	EMPID	IN	NUMBER,
	FECINICIAL	IN	VARCHAR2,
	FECFINAL	IN	VARCHAR2,
	HRSWORKD	OUT	NUMBER,
	RPS	OUT	VARCHAR2,
	MSG	OUT	VARCHAR2);
	
	PROCEDURE SPSALARYXEMP(
	EMPID	IN	NUMBER,
	FECINICIAL	IN	VARCHAR2,
	FECFINAL	IN	VARCHAR2,
	SALEMP	OUT	NUMBER,
	RPS	OUT	VARCHAR2,
	MSG	OUT	VARCHAR2);

	PROCEDURE SPFINDEMPBYDATE(
	EMPID IN NUMBER,
	FECINICIAL IN VARCHAR2,
	FECFINAL IN VARCHAR2,
	GENDERID OUT NUMBER,
	JOBID OUT NUMBER,
	NAME OUT VARCHAR2,
	LAST_NAME OUT VARCHAR2,
	BIRTHDATE OUT VARCHAR2,
	RSP OUT VARCHAR2,
	MSG OUT VARCHAR2);
END;
/
CREATE OR REPLACE PACKAGE BODY SCHEMPLOYEES.PAEMPLOYEES IS
	PROCEDURE SPADDEMPLOYEE(
	GENDERID IN NUMBER,
	JOBID IN NUMBER,
	NAME IN VARCHAR2,
	LASTNAME IN VARCHAR2,
	BIRTHDATE IN VARCHAR2,
	EMPLOYEEID OUT NUMBER,
	RPS OUT VARCHAR2,
	MSG OUT VARCHAR2) IS
	exc_ErrFoundEmp EXCEPTION;
	PRAGMA EXCEPTION_INIT (exc_ErrFoundEmp, -20991);
	csg_MsjFoundEmp VARCHAR2(30 CHAR) := 'El empleado ya existe.';
	CDATE DATE;
	MSGERR VARCHAR2(255);
	VLEXISTEMP NUMBER;
	VLEXISTJOB NUMBER;
	BEGIN
		BEGIN
			SELECT 1 INTO VLEXISTJOB FROM SCHEMPLOYEES.JOBS j 
			WHERE FIJOBID = JOBID;
		EXCEPTION
		WHEN NO_DATA_FOUND THEN
			VLEXISTJOB := 0;
		END;
		BEGIN
			SELECT 0 INTO VLEXISTEMP FROM SCHEMPLOYEES.EMPLOYEES e 
			WHERE FCNAME = NAME AND FCLASTNAME = LASTNAME;
		EXCEPTION
		WHEN NO_DATA_FOUND THEN
			VLEXISTEMP := 1;
		END;
		IF VLEXISTEMP = 1 AND VLEXISTJOB = 1 THEN
			CDATE:=TO_DATE(BIRTHDATE,'YYYY-MM-DD');
			INSERT INTO SCHEMPLOYEES.EMPLOYEES (FIGENDERID, FIJOBID, FCNAME, FCLASTNAME, FDBIRTHDATE)
			VALUES(GENDERID, JOBID, NAME, LASTNAME, CDATE) RETURNING FIEMPLOYEESID INTO EMPLOYEEID;
			COMMIT;
			RPS := 'TRUE';
		ELSE
			RAISE_APPLICATION_ERROR(csg_Pragma20991, csg_MsjFoundEmp);
		END IF;
	EXCEPTION
	WHEN exc_ErrFoundEmp THEN
		RPS := 'FALSE';
		EMPLOYEEID := 0;
		MSGERR := SUBSTR(SQLERRM, 1, 200);
		MSG := MSGERR;
		ROLLBACK;
	WHEN OTHERS THEN
		ROLLBACK;
		RPS := 'FALSE';
		EMPLOYEEID := 0;
		MSGERR := SUBSTR(SQLERRM, 1, 200);
		MSG := MSGERR;
	END;

	PROCEDURE SPFINDEMPBYJOB(
	JOBID IN NUMBER,
	CURDATOS OUT SYS_REFCURSOR) IS
	BEGIN
		OPEN CURDATOS
			FOR SELECT e.FIEMPLOYEESID, e.FCNAME, e.FCLASTNAME, TO_CHAR(e.FDBIRTHDATE,'YYYY-MM-DD'), j.FIJOBID, j.FCNAME, j.FNSALARY, g.FIGENDERID, g.FCNAME 
			FROM SCHEMPLOYEES.EMPLOYEES e
			INNER JOIN SCHEMPLOYEES.JOBS j 
			ON j.FIJOBID = e.FIJOBID 
			INNER JOIN SCHEMPLOYEES.GENDERS g 
			ON g.FIGENDERID = e.FIGENDERID 
			WHERE e.FIJOBID = JOBID;
	END;

	PROCEDURE SPHRSXEMP(
	EMPID	IN	NUMBER,
	FECINICIAL	IN	VARCHAR2,
	FECFINAL	IN	VARCHAR2,
	HRSWORKD	OUT	NUMBER,
	RPS	OUT	VARCHAR2,
	MSG	OUT	VARCHAR2) IS
		BAND NUMBER;
	BEGIN
		BEGIN
			SELECT csg_Uno INTO BAND 
			FROM SCHEMPLOYEES.EMPLOYEES e 
			WHERE e.FIEMPLOYEESID = EMPID; 
		EXCEPTION
		WHEN NO_DATA_FOUND THEN
			BAND := csg_Cero;
			HRSWORKD := csg_Cero;
			RPS := csg_False;
			MSG := csg_False;
		END;
		IF TO_DATE(FECINICIAL,'YYYY-MM-DD') < TO_DATE(FECFINAL,'YYYY-MM-DD') AND BAND = csg_Uno THEN
			BEGIN
				SELECT SUM(ewh.FNWORKED_HOURS), csg_True, csg_Exito INTO HRSWORKD, RPS, MSG 
				FROM SCHEMPLOYEES.EMPLOYEE_WORKED_HOURS ewh
				WHERE ewh.FIEMPLOYEESID = EMPID
				AND ewh.FDWORKED_DATE BETWEEN TO_DATE(FECINICIAL,'YYYY-MM-DD') AND TO_DATE(FECFINAL,'YYYY-MM-DD');
			EXCEPTION
			WHEN NO_DATA_FOUND THEN
				HRSWORKD := csg_Cero;
				RPS := csg_False;
				MSG := csg_False;
			END;
		END IF;
	EXCEPTION
	WHEN OTHERS THEN
		HRSWORKD := csg_Cero;
		RPS := csg_False;
		MSG := csg_False;
	END;

	PROCEDURE SPSALARYXEMP(
	EMPID	IN	NUMBER,
	FECINICIAL	IN	VARCHAR2,
	FECFINAL	IN	VARCHAR2,
	SALEMP	OUT	NUMBER,
	RPS	OUT	VARCHAR2,
	MSG	OUT	VARCHAR2) IS
		BAND NUMBER;
		DAYSWORKD NUMBER;
		SALARY NUMBER;
		SALDAY NUMBER;
		CSDAYS NUMBER := 30.4;
	BEGIN
		BEGIN
			SELECT csg_Uno INTO BAND 
			FROM SCHEMPLOYEES.EMPLOYEES e 
			WHERE e.FIEMPLOYEESID = EMPID; 
		EXCEPTION
		WHEN NO_DATA_FOUND THEN
			BAND := csg_Cero;
			SALEMP := csg_Cero;
			RPS := csg_False;
			MSG := csg_False;
		END;
		IF TO_DATE(FECINICIAL,'YYYY-MM-DD') < TO_DATE(FECFINAL,'YYYY-MM-DD') AND BAND = csg_Uno THEN
			BEGIN
				SELECT COUNT(ewh.FIEMPWORKHRSID) INTO DAYSWORKD 
				FROM SCHEMPLOYEES.EMPLOYEE_WORKED_HOURS ewh
				WHERE ewh.FIEMPLOYEESID = EMPID
				AND ewh.FDWORKED_DATE BETWEEN TO_DATE(FECINICIAL,'YYYY-MM-DD') AND TO_DATE(FECFINAL,'YYYY-MM-DD');
				
				SELECT j.FNSALARY INTO SALARY 
				FROM SCHEMPLOYEES.JOBS j 
				INNER JOIN SCHEMPLOYEES.EMPLOYEES e 
				ON e.FIJOBID = j.FIJOBID 
				WHERE e.FIEMPLOYEESID = EMPID;
				
				SALDAY := SALARY/CSDAYS;
				SALEMP := DAYSWORKD*SALDAY;
			EXCEPTION
			WHEN NO_DATA_FOUND THEN
				SALEMP := csg_Cero;
				RPS := csg_False;
				MSG := csg_False;
			END;
		END IF;
	EXCEPTION
	WHEN OTHERS THEN
		SALEMP := csg_Cero;
		RPS := csg_False;
		MSG := csg_False;
	END;

	PROCEDURE SPFINDEMPBYDATE(
	EMPID IN NUMBER,
	FECINICIAL IN VARCHAR2,
	FECFINAL IN VARCHAR2,
	GENDERID OUT NUMBER,
	JOBID OUT NUMBER,
	NAME OUT VARCHAR2,
	LAST_NAME OUT VARCHAR2,
	BIRTHDATE OUT VARCHAR2,
	RSP OUT VARCHAR2,
	MSG OUT VARCHAR2) IS
		BAND NUMBER;
		exc_ErrFoundEmp EXCEPTION;
		PRAGMA EXCEPTION_INIT (exc_ErrFoundEmp, -20991);
		csg_MsjFoundEmp VARCHAR2(30 CHAR) := 'Sucedio un error en el proceso.';
	BEGIN
		IF TO_DATE(FECINICIAL,'YYYY-MM-DD') < TO_DATE(FECFINAL,'YYYY-MM-DD') AND BAND = csg_Uno THEN
			BEGIN
				SELECT csg_Uno INTO BAND
				FROM SCHEMPLOYEES.EMPLOYEE_WORKED_HOURS ewh 
				WHERE ewh.FDWORKED_DATE BETWEEN TO_DATE(FECINICIAL,'YYYY-MM-DD') AND TO_DATE(FECFINAL,'YYYY-MM-DD')
				AND ewh.FIEMPLOYEESID = EMPID;
			EXCEPTION
			WHEN NO_DATA_FOUND THEN
				BAND := 0;
			END;
			IF BAND = 1 THEN
				SELECT e.FCNAME, e.FCLASTNAME, TO_CHAR(e.FDBIRTHDATE,'YYYY-MM-DD'), j.FIJOBID, g.FIGENDERID, csg_True, csg_Exito
				INTO NAME, LAST_NAME, BIRTHDATE, JOBID, GENDERID, RSP, MSG
				FROM SCHEMPLOYEES.EMPLOYEES e
				INNER JOIN SCHEMPLOYEES.JOBS j 
				ON j.FIJOBID = e.FIJOBID 
				INNER JOIN SCHEMPLOYEES.GENDERS g 
				ON g.FIGENDERID = e.FIGENDERID
				WHERE e.FIEMPLOYEESID = EMPID;
			ELSE
				RAISE_APPLICATION_ERROR(csg_Pragma20991, csg_MsjFoundEmp);
			END IF;
		ELSE
			RAISE_APPLICATION_ERROR(csg_Pragma20991, csg_MsjFoundEmp);
		END IF;
	
	EXCEPTION
	WHEN exc_ErrFoundEmp THEN
		NAME := NULL;
		LAST_NAME := NULL;
		BIRTHDATE := NULL;
		JOBID := csg_Cero;
		GENDERID := csg_Cero;
		RSP := csg_False;
		MSG := csg_False;
	WHEN NO_DATA_FOUND THEN
		NAME := NULL;
		LAST_NAME := NULL;
		BIRTHDATE := NULL;
		JOBID := csg_Cero;
		GENDERID := csg_Cero;
		RSP := csg_False;
		MSG := csg_False;
	WHEN OTHERS THEN
		NAME := NULL;
		LAST_NAME := NULL;
		BIRTHDATE := NULL;
		JOBID := csg_Cero;
		GENDERID := csg_Cero;
		RSP := csg_False;
		MSG := csg_False;
	END;
END;
